# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Build Projects

on:
  push:
    branches: [ "main" ]
  # pull_request:
  #   branches: [ "main" ]

permissions: write-all

jobs:
  build:
    runs-on: [Windows, self-hosted]
    strategy:
      matrix:
        buildConfig: [Debug_x86_64, Release_x86_64, Dist_x86_64]

    steps:
    - name: Pull repo
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v2

    - name: Generate Solution Files
      run: .${{env.GITHUB_WORKSPACE}}\vendor\bin\premake\premake5_windows.exe vs2022

    - name: Build Solution
      working-directory: ${{env.GITHUB_WORKSPACE}}
      # Add additional options to the MSBuild command line here (like platform or verbosity level).
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
      run: msbuild /m /p:Configuration=${{matrix.buildConfig}} .

    - name: Zip build
      run: Compress-Archive -Path compile/bin/${{matrix.buildConfig}}-windows-x86_64 -Destination ${{matrix.buildConfig}}-windows-x86_64.zip

  create-draft-release:
    runs-on: [Windows, self-hosted]
    needs: [
      build
    ]
    if: ${{ always() && !cancelled() && needs.build.result == 'success' }}
    steps:
    - name: Create Draft Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: s${{github.run_number}}
        release_name: Snapshot build s${{github.run_number}}
        draft: true
        prerelease: true

  upload-files:
    runs-on: [Windows, self-hosted]
    strategy:
      matrix:
        buildConfig: [Debug_x86_64, Release_x86_64, Dist_x86_64]
    needs: [
      create-draft-release
    ]
    steps:
    - uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: | 
          ${{matrix.buildConfig}}-windows-x86_64.zip
        asset_name: |
          ${{matrix.buildConfig}}-windows-x86_64.zip
        asset_content_type: application/zip
    - uses: eregon/publish-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        release_id: ${{ steps.create_release.outputs.id }}

