# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Build Projects

on:
  push:
    branches: [ "main" ]
  # pull_request:
  #   branches: [ "main" ]

env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: .

  # Configuration type to build.
  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix


permissions:
  contents: read

jobs:
  build:
    runs-on: [Windows, self-hosted]

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v2

    - name: Generate Solution Files
      run: .${{env.GITHUB_WORKSPACE}}\vendor\bin\premake\premake5_windows.exe vs2022

    strategy:
      matrix:
        buildConfig: [Debug_x86_64, Release_x86_64, Dist_x86_64]
    steps:
    - name: Build Solution
      working-directory: ${{env.GITHUB_WORKSPACE}}
      # Add additional options to the MSBuild command line here (like platform or verbosity level).
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
      run: msbuild /m /p:Configuration=${{matrix.buildConfig}} ${{env.SOLUTION_FILE_PATH}}

    - name: Upload builds
      uses: actions/upload-artifact@v4
      with:
        name: ${{matrix.buildConfig}}
        path: |
          compile/bin/${{matrix.buildConfig}}-windows-x86_64
